{
  "name": "nativescript-ng2-magic",
  "nativescript": {
    "platforms": {
      "ios": "2.0.0",
      "android": "2.0.0"
    }
  },
  "version": "1.5.7",
  "description": "Magically integrate your Angular2 web app with NativeScript.",
  "main": "nativescript-ng2-magic.js",
  "typings": "./nativescript-ng2-magic.d.ts",
  "author": {
    "name": "Nathan Walker",
    "email": "walkerrunpdx@gmail.com",
    "url": "http://github.com/NathanWalker"
  },
  "contributors": [
    {
      "name": "Nathanael Anderson",
      "email": "nathan@master-technology",
      "url": "http://github.com/NathanaelA"
    }
  ],
  "repository": {
    "url": "git+https://github.com/NathanWalker/nativescript-ng2-magic.git"
  },
  "license": "MIT",
  "scripts": {
    "postinstall": "node install.js"
  },
  "peerDependencies": {
    "@angular/common": "^2.0.0-rc.1",
    "@angular/compiler": "^2.0.0-rc.1",
    "@angular/core": "^2.0.0-rc.1",
    "@angular/router": "^2.0.0-rc.1",
    "@angular/router-deprecated": "^2.0.0-rc.1",
    "@angular/platform-browser": "^2.0.0-rc.1",
    "@angular/platform-browser-dynamic": "^2.0.0-rc.1"
  },
  "readme": "[![Angular 2 Style Guide](https://mgechev.github.io/angular2-style-guide/images/badge.svg)](https://github.com/mgechev/angular2-style-guide)\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)\n[![Dependency Status](https://david-dm.org/preboot/angular2-library-seed/status.svg)](https://david-dm.org/preboot/angular2-library-seed#info=dependencies) [![devDependency Status](https://david-dm.org/preboot/angular2-library-seed/dev-status.svg)](https://david-dm.org/preboot/angular2-webpack#info=devDependencies)\n\n![nativescript-ng2-magic](https://cdn.filestackcontent.com/XXMT4f8S8OGngNsJj0pr?v=0)\n\nMagically drop a [NativeScript](https://www.nativescript.org/) app into your existing [Angular2](https://angular.io/) web application and reuse all your code.*\n\n*You will be adding NativeScript views, but you already knew that.*\n\n* [Supported projects that can use magic](#supported-projects)\n* [Watch video on how to integrate with Angular CLI](http://www.nativescriptsnacks.com/videos/2016/05/12/magic-scaffolding.html)\n\n## Install\n\n```\nnpm i nativescript-ng2-magic\n```\n\n## Usage\n\n1. Use `Component` from `nativescript-ng2-magic` instead of `@angular/core`. [Why?](#why-different-component)\n2. Create NativeScript views ending with `.tns.html` for each of your component's templates. [How?](#how-to-create-nativescript-views)\n3. [Run your truly *native* mobile app with NativeScript!](#run-for-first-time)\n\n## Example\n\nA sample root component, **app.component.ts**:\n\n```\nimport {Component} from 'nativescript-ng2-magic';\n\n@Component({\n  selector: 'app',\n  templateUrl: './client/components/app.component.html'\n})\nexport class AppComponent {}\n```\n\n#### What if using the router?\n\n* If using the *new* `@angular/router`:\n\nYou will want to use `MagicService.ROUTER_DIRECTIVES` from `nativescript-ng2-magic`. Here's an example of the root component:\n\n```\nimport {Component, MagicService} from 'nativescript-ng2-magic';\nimport {Routes} from '@angular/router';\n\nimport {HomeComponent} from './components/home';\nimport {AboutComponent} from './components/about';\n\n@Component({\n  selector: 'app',\n  templateUrl: './client/components/app.component.html',\n  directives: [MagicService.ROUTER_DIRECTIVES] // <-- Notice this!\n})\n@Routes([\n  { path: '/home',       component: HomeComponent },\n  { path: '/about',      component: AboutComponent }\n])\nexport class AppComponent {}\n```\n\n* If using `@angular/router-deprecated`:\n\nYou will want to use `MagicService.DEP_ROUTER_DIRECTIVES` from `nativescript-ng2-magic`. Here's an example of the root component:\n\n```\nimport {Component, MagicService} from 'nativescript-ng2-magic';\nimport {RouteConfig} from '@angular/router-deprecated';\n\nimport {HomeComponent} from './components/home';\nimport {AboutComponent} from './components/about';\n\n@Component({\n  selector: 'app',\n  templateUrl: './client/components/app.component.html',\n  directives: [MagicService.DEP_ROUTER_DIRECTIVES]  // <-- Notice this!\n})\n@RouteConfig([\n  { path: '/home',       component: HomeComponent,        name: 'Home', useAsDefault: true },\n  { path: '/about',      component: AboutComponent,       name: 'About' }\n])\nexport class AppComponent {}\n```\n\n### Run for first time!\n\nYou will need to have fully completed steps 1 and 2 above.\n\nRun your app in the iOS Simulator with:\n\n```\nnpm run start.ios\n```\n\nRun your app in an Android emulator with:\n\n```\nnpm run start.android\n```\n\nWelcome to the wonderfully magical world of NativeScript!\n\n## How to create NativeScript views\n\nBased on our example above, assume `./client/components/app.component.html` looks like this:\n\n```\n<main>\n  <div>This is my root component</div>\n</main>\n```\n\nYou would then create a new file in `./client/components/app.component.tns.html` like this:\n\n```\n<StackLayout>\n  <Label text=\"This is my root component\"></Label>\n</StackLayout>\n```\n\nYou can [learn more about NativeScript view options here](https://docs.nativescript.org/ui/ui-views).\n\nYou can also install helpful view snippets for [VS Code here](https://marketplace.visualstudio.com/items?itemName=wwwalkerrun.nativescript-ng2-snippets) or [Atom Editor here](https://atom.io/packages/nativescript-ng2-atom-snippets).\n\nYou can [learn more here](http://angularjs.blogspot.com/2016/03/code-reuse-in-angular-2-native-mobile.html?m=1) about how this setup works and why.\n\n## Supported Projects\n\n* [angular-cli](https://cli.angular.io/)\n* [angular2-seed](https://github.com/angular/angular2-seed)\n* [angular2-webpack-seed](https://github.com/NathanWalker/angular2-webpack-seed)\n\n### Why different Component?\n\n`Component` from `nativescript-ng2-magic` is identical to `Component` from `@angular/core`, except it automatically uses NativeScript views when your app runs in a NativeScript mobile app.\n\nThe library provides a custom `Decorator` under the hood.\nFeel free to [check it out here](https://github.com/NathanWalker/nativescript-ng2-magic/blob/master/src/client/plugin/decorators/magic.component.ts) and it uses a [utility here](https://github.com/NathanWalker/nativescript-ng2-magic/blob/master/src/client/plugin/decorators/utils.ts).\n\nYou can see more elaborate use cases of this magic with [angular2-seed-advanced](https://github.com/NathanWalker/angular2-seed-advanced).\n\n## Requirements\n\n* [Install NativeScript](http://docs.nativescript.org/start/getting-started#install-nativescript-and-configure-your-environment)\n\n# License\n\n[MIT](/LICENSE)\n",
  "readmeFilename": "README.md",
  "gitHead": "0de038792a15b88424559b267103558f77526c97",
  "bugs": {
    "url": "https://github.com/NathanWalker/nativescript-ng2-magic/issues"
  },
  "homepage": "https://github.com/NathanWalker/nativescript-ng2-magic#readme",
  "_id": "nativescript-ng2-magic@1.5.7",
  "_shasum": "fa9f09f3c3177222c9431c6962dcc5d0edf60858",
  "_from": "nativescript-ng2-magic@latest"
}
